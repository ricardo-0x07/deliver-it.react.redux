{"version":3,"sources":["index.tsx"],"names":[],"mappings":"AAAA,kCAAkC;AAClC,wBAAwB;AACxB,uDAAuD;AACvD,4BAA4B;AAC5B,kCAAkC;AAClC,oBAAoB;AACpB,4CAA4C;AAC5C,6CAA6C;AAC7C,YAAY,CAAC;;AAEb,4BAA4B;AAC5B,6BAA+B;AAC/B,oCAAsC;AAEtC,kDAAyC;AACzC,0DAAiD;AACjD,oEAA4D;AAC5D,gFAA2E;AAE3E,8DAAsD;AACtD,0EAAqE;AACrE,qDAAgD;AAChD,qDAIyB;AACzB,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;AAIxC,mEAA8D;AAC9D,+DAA0D;AAC1D,2CAAqC;AAGrC,0CAA2C;AAC3C,mFAAgF;AAChF,2CAAgC;AAEhC,+BAAqE;AACrE,+DAA0D;AAC1D,yDAAiH;AACjH,iFAAiF;AACjF,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,2BAAiB,CAAC,CAAC;AACpD,IAAM,OAAO,GAAG,2BAAiB,EAAE,CAAA;AACnC,yEAAyE;AACzE,2DAA2D;AAC3D,2EAA2E;AAC3E,IAAM,UAAU,GAAG,qCAAgB,CAAC,OAAO,CAAC,CAAA;AAC5C,oDAAoD;AACpD,2CAA2C;AAC3C,IAAM,KAAK,GAAG,mBAAW,CACvB,eAAW,EACX,uBAAe,CAAC,UAAU,EAAE,qBAAK,EAAE,yCAAiC,EAAE,CAAC,CACxE,CAAA;AAED,KAAK,CAAC,QAAQ,CAAC,+BAAa,EAAE,CAAC,CAAC;AAChC,KAAK,CAAC,QAAQ,CAAC,2BAAW,EAAE,CAAC,CAAC;AAI9B,QAAQ,CAAC,MAAM,CACb,oBAAC,sBAAQ,IAAC,KAAK,EAAE,KAAK;IAEpB,oBAAC,6BAAM,IAAC,OAAO,EAAE,OAAO;QACpB;YACE,oBAAC,gBAAM,OAAG;YACV,oBAAC,wBAAK,IAAC,KAAK,QAAC,IAAI,EAAC,GAAG,EAAC,SAAS,EAAE,kBAAI,GAAI;YACzC,oBAAC,wBAAK,IAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAE,sBAAS,GAAI;YACjD,oBAAC,wBAAK,IAAC,KAAK,QAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAE,4BAAkB,GAAI;YAC/D,oBAAC,wBAAK,IAAC,IAAI,EAAC,eAAe,EAAC,SAAS,EAAE,4BAAkB,GAAI;YAC7D,oBAAC,wBAAK,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAE,oBAAO,GAAI;YAC7C,oBAAC,wBAAK,IAAC,KAAK,QAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAE,0BAAgB,GAAI;YAC3D,oBAAC,wBAAK,IAAC,IAAI,EAAC,aAAa,EAAC,SAAS,EAAE,0BAAgB,GAAI;YACzD,oBAAC,wBAAK,IAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAE,mBAAK,GAAI,CACrC,CACD,CACA,EACX,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAC/B,CAAA","file":"index.js","sourcesContent":["/*eslint-disable import/default */\r\n/*jshint strict:false */\r\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\r\n/*jshint browserify: true */\r\n/* eslint-disable no-unused-vars*/\r\n/* eslint-disable */\r\n/* global $ jQuery require console module */\r\n/// <reference path=\"../typings/index.d.ts\"/>\r\n\"use strict\";\r\n\r\n// import {$} from 'jquery';\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport App from './components/app';\r\nimport Home from './components/homePage';\r\nimport About from './components/about/aboutPage';\r\nimport Customers from './components/customers/customerPage';\r\nimport ManageCustomerForm from './components/customers/ManageCustomerForm';\r\n\r\nimport Drivers from './components/drivers/driverPage';\r\nimport ManageDriverForm from './components/drivers/ManageDriverForm';\r\nimport Header from './components/common/header';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Link, \r\n} from 'react-router-dom'\r\nrequire('es6-object-assign').polyfill();\r\n\r\nimport routes from './routes';\r\nimport configureStore from './store/configureStore.dev';\r\nimport {loadCustomers} from './redux-actions/customerActions';\r\nimport {loadDrivers} from './redux-actions/driverActions';\r\nimport {Provider} from 'react-redux';\r\nimport initialState from './reducers/initialState';\r\n\r\nimport rootReducer from './reducers/index';\r\nimport immutableStateInvariantMiddleware from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport createHashHistory from 'history/createHashHistory';\r\nimport { syncHistoryWithStore, ConnectedRouter, routerReducer, routerMiddleware, push } from 'react-router-redux'\r\n// Create a history of your choosing (we're using a browser history in this case)\r\nconsole.log('createHashHistory', createHashHistory);\r\nconst history = createHashHistory()\r\n// Create an enhanced history that syncs navigation events with the store\r\n// const history = syncHistoryWithStore(hashHistory, store)\r\n// Build the middleware for intercepting and dispatching navigation actions\r\nconst middleware = routerMiddleware(history)\r\n// Add the reducer to your store on the `router` key\r\n// Also apply our middleware for navigating\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(middleware, thunk, immutableStateInvariantMiddleware())\r\n)\r\n\r\nstore.dispatch(loadCustomers());\r\nstore.dispatch(loadDrivers());\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    { /* ConnectedRouter will use the store from Provider automatically */ }\r\n    <Router history={history}>\r\n        <div>\r\n          <Header />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/customers\" component={Customers} />\r\n          <Route exact path=\"/customer\" component={ManageCustomerForm} />\r\n          <Route path=\"/customer/:id\" component={ManageCustomerForm} />\r\n          <Route path=\"/drivers\" component={Drivers} />\r\n          <Route exact path=\"/driver\" component={ManageDriverForm} />\r\n          <Route path=\"/driver/:id\" component={ManageDriverForm} />\r\n          <Route path=\"/about\" component={About} />\r\n        </div>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('app')\r\n)"],"sourceRoot":"/source/"}