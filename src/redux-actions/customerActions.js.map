{"version":3,"sources":["redux-actions/customerActions.tsx"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uDAAuD;AACvD,4BAA4B;AAC5B,kCAAkC;AAClC,oBAAoB;AACpB,4CAA4C;AAC5C,gDAAgD;AAChD,YAAY,CAAC;;AAEb,oDAA8C;AAC9C,qCAAuC;AACvC,yDAAkD;AAElD,6BAAoC,SAAS;IACzC,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,sBAAsB,EAAE,SAAS,WAAA,EAAC,CAAC;AAC3D,CAAC;AAFD,kDAEC;AAED,+BAAsC,QAAQ;IAC1C,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,uBAAuB,EAAE,QAAQ,UAAA,EAAC,CAAC;AAC3D,CAAC;AAFD,sDAEC;AAED,+BAAsC,QAAQ;IAC1C,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,uBAAuB,EAAE,QAAQ,UAAA,EAAC,CAAC;AAC3D,CAAC;AAFD,sDAEC;AAED,+BAAsC,QAAQ;IAC1C,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,uBAAuB,EAAE,QAAQ,UAAA,EAAC,CAAC;AAC3D,CAAC;AAFD,sDAEC;AAED;IACI,MAAM,CAAC,UAAA,QAAQ;QACX,QAAQ,CAAC,iCAAa,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,sBAAW,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAA,SAAS;YAC/C,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC;aAED,KAAK,CAAC,UAAA,KAAK;YACR,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAXD,sCAWC;AAED,wBAA+B,QAAQ;IACnC,MAAM,CAAC,UAAA,QAAQ;QACX,QAAQ,CAAC,iCAAa,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,sBAAW,CAAC,YAAY,CAAC,QAAQ,CAAC;aACxC,IAAI,CAAC,UAAA,QAAQ;YACV,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACR,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAXD,wCAWC;AAED,wBAA+B,QAAQ;IACnC,MAAM,CAAC,UAAA,QAAQ;QACX,QAAQ,CAAC,iCAAa,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,sBAAW,CAAC,YAAY,CAAC,QAAQ,CAAC;aACxC,IAAI,CAAC,UAAA,MAAM;YACR,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACR,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAXD,wCAWC;AAED,wBAA+B,EAAE;IAC7B,MAAM,CAAC,UAAA,QAAQ;QACX,QAAQ,CAAC,iCAAa,EAAE,CAAC,CAAC;QAC1B,MAAM,CAAC,sBAAW,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,IAAI,CAAC,UAAA,eAAe;YACjB,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,eAAe,CAAC,CAAC;YAChE,QAAQ,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACR,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAZD,wCAYC","file":"redux-actions/customerActions.js","sourcesContent":["/*jshint strict:false */\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\n/*jshint browserify: true */\n/* eslint-disable no-unused-vars*/\n/* eslint-disable */\n/* global $ jQuery require console module */\n/// <reference path=\"../../typings/index.d.ts\"/>\n\"use strict\";\n\nimport CustomerApi from '../api/customersApi';\nimport * as types from './actionTypes';\nimport {beginAjaxCall} from './ajaxStatusActions';\n\nexport function loadCustomerSuccess(customers) {\n    return {type: types.LOAD_CUSTOMERS_SUCCESS, customers};\n}\n\nexport function createCustomerSuccess(customer) {\n    return {type: types.CREATE_CUSTOMER_SUCCESS, customer};\n}\n\nexport function deleteCustomerSuccess(customer) {\n    return {type: types.DELETE_CUSTOMER_SUCCESS, customer};\n}\n\nexport function updateCustomerSuccess(customer) {\n    return {type: types.UPDATE_CUSTOMER_SUCCESS, customer};\n}\n\nexport function loadCustomers() {\n    return dispatch => {\n        dispatch(beginAjaxCall());\n        return CustomerApi.getAllCustomers().then(customers => {\n            dispatch(loadCustomerSuccess(customers));\n        })\n\n        .catch(error => {\n            throw (error);\n        });\n    };\n}\n\nexport function createCustomer(customer) {\n    return dispatch => {\n        dispatch(beginAjaxCall());\n        return CustomerApi.saveCustomer(customer)\n        .then(customer => {\n            dispatch(createCustomerSuccess(customer));\n        })\n        .catch(error => {\n            throw (error);\n        });\n    };\n}\n\nexport function updateCustomer(customer) {\n    return dispatch => {\n        dispatch(beginAjaxCall());\n        return CustomerApi.saveCustomer(customer)\n        .then(author => {\n            dispatch(updateCustomerSuccess(customer));\n        })\n        .catch(error => {\n            throw (error);\n        });\n    };\n}\n\nexport function deleteCustomer(id) {\n    return dispatch => {\n        dispatch(beginAjaxCall());\n        return CustomerApi.deleteCustomer(id)\n        .then(deletedCustomer => {\n            console.log('customerActions deletedCustomer', deletedCustomer);\n            dispatch(deleteCustomerSuccess(deletedCustomer));\n        })\n        .catch(error => {\n            throw (error);\n        });\n    };\n}\n"],"sourceRoot":"/source/"}