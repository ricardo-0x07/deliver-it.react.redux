{"version":3,"sources":["components/drivers/ManageDriverForm.tsx"],"names":[],"mappings":"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","file":"components/drivers/ManageDriverForm.js","sourcesContent":["/* global $ jQuery require console module */\n/*jshint strict:false */\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\n/*jshint browserify: true */\n/* eslint-disable no-unused-vars*/\n/* eslint-disable */\n/// <reference path=\"../../../typings/index.d.ts\"/>\n\"use strict\";\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as driverActions from '../../redux-actions/driverActions';\nimport DriverForm from './driverForm';\nimport toastr = require('toastr');\nimport {authorsFormattedForDropdown} from '../../selectors/selectors';\nrequire('es6-object-assign').polyfill();\ninterface DispatchProps {\n    onClick1: Function,\n\n}\n\n\ninterface MyProps {\n    driver: any,\n    actions: any\n}\ninterface MyState {\n    driver?: any,\n    errors?: any,\n    saving?: boolean\n}\nexport class ManageDriverPage extends React.Component<MyProps, MyState> {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            driver: Object.assign({}, props.driver),\n            errors: {},\n            saving: false\n        };\n        this.updateDriverState = this.updateDriverState.bind(this);\n        this.saveDriver = this.saveDriver.bind(this);\n        console.log('this.props', this.props);\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     if(this.props.driver.id != nextProps.driver.id) {\n    //     // Necessary to populate form when existing driver is loaded directly.\n    //         this.setState({\n    //             driver: Object.assign({}, nextProps.driver)\n    //         });\n    //     }\n    // }\n\n    updateDriverState(event) {\n        const field = event.target.name;\n        let driver = this.state.driver;\n        driver[field] = event.target.value;\n        return this.setState({\n            driver: driver\n        });\n    }\n\n    driverFormIsValid() {\n        let formIsValid = true;\n        let errors: any = {};\n\n        if(this.state.driver.firstName.length < 5) {\n            errors.firstName = 'First Name must be at least 5 characters.';\n            formIsValid = false;\n        }\n\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n    saveDriver(event) {\n        event.preventDefault();\n\n        if(!this.driverFormIsValid()) {\n            return;\n        }\n\n        this.setState({saving: true});\n        // this.state.saving = true;\n        if(this.state.driver.id) {\n            return this.updateDriver(this.state.driver);\n        }\n\n        return this.props.actions.createDriver(this.state.driver)\n        .then(() => this.redirect())\n        .catch(error => {\n            toastr.error(error);\n            this.setState({saving: false});\n        //   this.state.saving = false;\n        });\n    }\n    \n    updateDriver = (driver) => {\n        this.props.actions.updateDriver(this.state.driver)\n        .then(() => this.redirect())\n        .catch(error => {\n            toastr.error(error);\n            this.setState({saving: false});\n        //   this.state.saving = false;\n        });       \n    }\n    redirect = () => {\n        this.setState({saving: false});\n        // this.state.saving = false;\n        toastr.success('Driver saved');\n        console.log('this.context', this.context);\n        this.context.router.history.push('/drivers');\n    }\n\n    render() {\n        console.log('this.props', this.props);\n        console.log('this.state', this.state);\n        return (\n            <div>\n                <DriverForm\n                    driver={this.state.driver}\n                    onSave={this.saveDriver}\n                    onChange={this.updateDriverState}\n                    saving={this.state.saving}\n                    errors={this.state.errors} />\n            </div>\n        );\n    }\n}\n\nManageDriverPage.propTypes = {\n    driver: React.PropTypes.object.isRequired,\n    actions: React.PropTypes.object.isRequired\n};\n\n//Pull in the React Router context so router is available on this.context.router.\nManageDriverPage.contextTypes = {\n    router: React.PropTypes.object\n};\n\nfunction getDriverById(drivers, id) {\n    const driver = drivers.filter(driver => driver.id == id);\n    if(driver) return driver[0]; //since filter returns an array, have to grab the first.\n    return null;\n}\n\nfunction mapStateToProps(state, ownProps) {\n    console.log('mapStateToProps state', state);\n    console.log('mapStateToProps ownProps', ownProps);\n    const driverId = ownProps.match.params.id; // from the path `/driver/:id`\n\n    let driver = {};\n\n    if(driverId && state.drivers.length > 0) {\n        driver = getDriverById(state.drivers, driverId);\n    }\n\n    return {\n        driver: driver,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(driverActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDriverPage);\n"],"sourceRoot":"/source/"}