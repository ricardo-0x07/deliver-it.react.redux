{"version":3,"sources":["components/customers/ManageCustomerForm.tsx"],"names":[],"mappings":"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","file":"components/customers/ManageCustomerForm.js","sourcesContent":["/* global $ jQuery require console module */\n/*jshint strict:false */\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\n/*jshint browserify: true */\n/* eslint-disable no-unused-vars*/\n/* eslint-disable */\n/// <reference path=\"../../../typings/index.d.ts\"/>\n\"use strict\";\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as customerActions from '../../redux-actions/customerActions';\nimport CustomerForm from './customerForm';\nimport toastr = require('toastr');\nimport {authorsFormattedForDropdown} from '../../selectors/selectors';\nrequire('es6-object-assign').polyfill();\ninterface DispatchProps {\n    onClick1: Function,\n\n}\n\n\ninterface MyProps {\n    customer: any,\n    actions: any\n}\ninterface MyState {\n    customer?: any,\n    errors?: any,\n    saving?: boolean\n}\n\nexport class ManageCustomerPage extends React.Component<MyProps, MyState> {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            customer: Object.assign({}, props.customer),\n            errors: {},\n            saving: false\n        };\n        this.updateCustomerState = this.updateCustomerState.bind(this);\n        this.saveCustomer = this.saveCustomer.bind(this);\n        console.log('this.props', this.props);\n    }\n    // componentWillReceiveProps(nextProps) {\n    //     if(this.props.customer.id != nextProps.customer.id) {\n    //     // Necessary to populate form when existing customer is loaded directly.\n    //         this.setState({\n    //             customer: Object.assign({}, nextProps.customer)\n    //         });\n    //     }\n    // }\n\n    updateCustomerState(event) {\n        const field = event.target.name;\n        let customer = this.state.customer;\n        customer[field] = event.target.value;\n        return this.setState({\n            customer: customer\n        });\n    }\n\n    customerFormIsValid() {\n        let formIsValid = true;\n        let errors: any = {};\n\n        if(this.state.customer.firstName.length < 5) {\n            errors.firstName = 'First Name must be at least 5 characters.';\n            formIsValid = false;\n        }\n\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n    saveCustomer(event) {\n        event.preventDefault();\n\n        if(!this.customerFormIsValid()) {\n            return;\n        }\n\n        this.setState({saving: true});\n        // this.state.saving = true;\n        if(this.state.customer.id) {\n            return this.updateCustomer(this.state.customer);\n        }\n\n        return this.props.actions.createCustomer(this.state.customer)\n        .then(() => this.redirect())\n        .catch(error => {\n            toastr.error(error);\n            this.setState({saving: false});\n        //   this.state.saving = false;\n        });\n    }\n    \n    updateCustomer = (customer) => {\n        this.props.actions.updateCustomer(this.state.customer)\n        .then(() => this.redirect())\n        .catch(error => {\n            toastr.error(error);\n            this.setState({saving: false});\n        //   this.state.saving = false;\n        });       \n    }\n    redirect = () => {\n        this.setState({saving: false});\n        // this.state.saving = false;\n        toastr.success('Customer saved');\n        console.log('this.context', this.context);\n        this.context.router.history.push('/customers');\n    }\n\n    render() {\n        console.log('this.props', this.props);\n        console.log('this.state', this.state);\n        return (\n            <div>\n                <CustomerForm\n                    customer={this.state.customer}\n                    onSave={this.saveCustomer}\n                    onChange={this.updateCustomerState}\n                    saving={this.state.saving}\n                    errors={this.state.errors} />\n            </div>\n        );\n    }\n}\n\nManageCustomerPage.propTypes = {\n    customer: React.PropTypes.object.isRequired,\n    actions: React.PropTypes.object.isRequired\n};\n\n//Pull in the React Router context so router is available on this.context.router.\nManageCustomerPage.contextTypes = {\n    router: React.PropTypes.object\n};\n\nfunction getCustomerById(customers, id) {\n    const customer = customers.filter(customer => customer.id == id);\n    if(customer) return customer[0]; //since filter returns an array, have to grab the first.\n    return null;\n}\n\nfunction mapStateToProps(state, ownProps) {\n    console.log('mapStateToProps state', state);\n    console.log('mapStateToProps ownProps', ownProps);\n    const customerId = ownProps.match.params.id; // from the path `/customer/:id`\n\n    let customer = {};\n\n    if(customerId && state.customers.length > 0) {\n        customer = getCustomerById(state.customers, customerId);\n    }\n\n    return {\n        customer: customer,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(customerActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCustomerPage);\n"],"sourceRoot":"/source/"}