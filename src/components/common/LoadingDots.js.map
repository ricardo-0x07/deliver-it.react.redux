{"version":3,"sources":["components/common/LoadingDots.tsx"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uDAAuD;AACvD,4BAA4B;AAC5B,kCAAkC;AAClC,oBAAoB;AACpB,4CAA4C;AAC5C,mDAAmD;AACnD,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;AAEb,6BAA+B;AAE/B;IAA0B,+BAAe;IACrC,qBAAY,KAAK,EAAE,OAAO;QAA1B,YACI,kBAAM,KAAK,EAAE,OAAO,CAAC,SAGxB;QADG,KAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;IAC9B,CAAC;IAED,uCAAiB,GAAjB;QAAA,iBAMC;QALG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC;gBACV,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;aAC9B,CAAC,CAAC;QACP,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAED,0CAAoB,GAApB;QACI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,4BAAM,GAAN;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QACpD,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,OAAM,IAAI,GAAG,CAAC,EAAE,CAAC;YACb,IAAI,IAAI,GAAG,CAAC;YACZ,IAAI,EAAE,CAAC;QACX,CAAC;QACD,MAAM,CAAC,yCAAU,IAAI,CAAC,KAAK;YAAG,IAAI;qBAAc,CAAC;IACrD,CAAC;IACL,kBAAC;AAAD,CA5BA,AA4BC,CA5ByB,KAAK,CAAC,SAAS,GA4BxC;AAED,WAAW,CAAC,YAAY,GAAG;IACvB,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;CACzB,CAAC;AAEF,WAAW,CAAC,SAAS,GAAG;IACpB,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;IAChC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CAC/B,CAAC;AAEF,kBAAe,WAAW,CAAC","file":"components/common/LoadingDots.js","sourcesContent":["/*jshint strict:false */\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\n/*jshint browserify: true */\n/* eslint-disable no-unused-vars*/\n/* eslint-disable */\n/* global $ jQuery require console module */\n/// <reference path=\"../../../typings/index.d.ts\"/>\n\"use strict\";\n\nimport * as React from 'react';\n\nclass LoadingDots extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = { frame: 1 };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.setState({  // eslint-disable-line react/no-did-mount-set-state\n                frame: this.state.frame + 1\n            });\n        }, this.props.interval);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        let dots = this.state.frame % (this.props.dots + 1);\n        let text = '';\n        while(dots > 0) {\n            text += '.';\n            dots--;\n        }\n        return <span {...this.props}>{text}&nbsp;</span>;\n    }\n}\n\nLoadingDots.defaultProps = {\n    interval: 300, dots: 3\n};\n\nLoadingDots.propTypes = {\n    interval: React.PropTypes.number,\n    dots: React.PropTypes.number\n};\n\nexport default LoadingDots;\n"],"sourceRoot":"/source/"}