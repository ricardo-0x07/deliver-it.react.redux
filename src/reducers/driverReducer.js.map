{"version":3,"sources":["reducers/driverReducer.tsx"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uDAAuD;AACvD,4BAA4B;AAC5B,kCAAkC;AAClC,oBAAoB;AACpB,4CAA4C;AAC5C,gDAAgD;AAChD,YAAY,CAAC;;AAEb,oDAAsD;AACtD,+CAA0C;AAE1C,yBAAwC,KAA4B,EAAE,MAAM;IAApC,sBAAA,EAAA,QAAQ,sBAAY,CAAC,OAAO;IAChE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACtB,KAAK,KAAK,CAAC,oBAAoB;YAC3B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1B,KAAK,KAAK,CAAC,qBAAqB;YAC5B,MAAM,CACC,KAAK;gBACR,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC;eAClC;QAEN,KAAK,KAAK,CAAC,qBAAqB;YAC5B,MAAM,CACC,KAAK,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,EAA9B,CAA8B,CAAC;gBACzD,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC;eAClC;QACN,KAAK,KAAK,CAAC,qBAAqB;YAC5B,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YAClD,MAAM,CACC,KAAK,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,MAAM,CAAC,EAAE,EAA9B,CAA8B,CAAC,SAC3D;QACN;YACI,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AAxBD,kCAwBC","file":"reducers/driverReducer.js","sourcesContent":["/*jshint strict:false */\n/* eslint camelcase: [\"error\", {properties: \"never\"}]*/\n/*jshint browserify: true */\n/* eslint-disable no-unused-vars*/\n/* eslint-disable */\n/* global $ jQuery require console module */\n/// <reference path=\"../../typings/index.d.ts\"/>\n\"use strict\";\n\nimport * as types from '../redux-actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function customerReducer(state = initialState.drivers, action) {\n    switch (action.type) {\n    case types.LOAD_DRIVERS_SUCCESS:\n        return action.drivers;\n    case types.CREATE_DRIVER_SUCCESS:\n        return [\n            ...state,\n            Object.assign({}, action.driver)\n        ];\n\n    case types.UPDATE_DRIVER_SUCCESS:\n        return [\n            ...state.filter(driver => driver.id !== action.driver.id),\n            Object.assign({}, action.driver)\n        ];\n    case types.DELETE_DRIVER_SUCCESS:\n        console.log('DELETE_DRIVER_SUCCESS action', action);\n        console.log('DELETE_DRIVER_SUCCESS state', state);\n        return [\n            ...state.filter(driver => driver.id !== action.driver.id)\n        ];\n    default:\n        return state;\n    }\n}\n"],"sourceRoot":"/source/"}